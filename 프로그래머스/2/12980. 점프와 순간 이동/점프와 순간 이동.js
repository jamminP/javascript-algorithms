function solution(n)
{
    var ans = 0;

    // k = 비용이 있는 이동, 텔레포트 = 비용이 없는 이동
    // k를 가장 적고, 가장 낮은 값을 하는 것이 좋음. '텔포 = 현재온 거리 * 2'
    // 짝수 일때는 = 텔포가 효율적, 홀수 일 경우에는 1만큼 점프를 하고 텔포를 하는게 효율적.
    // 홀수가 나오는 경우의 수를 찾으면 됨.
    while(n !== 1){ 
        if(n % 2 === 1){
            n = Math.floor(n/2);
            ans++;
            continue;
        }
        
        n /= 2;
    }
    
    ans++; // 1이 된 경우에 점프를 한 번만 해주면 되기 때문에.
    
    return ans;
}